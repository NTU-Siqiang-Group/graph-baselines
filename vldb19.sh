#!/bin/bash

# Comments this line out if deps have been installed globally.
# shellcheck disable=SC1091
[[ -f ".venv/bin/activate" ]] && source .venv/bin/activate

# Bash strict mode
# redsymbol.net/articles/unofficial-bash-strict-mode
set -ueo pipefail

# Some tests are possible/make sense only for index capable systems.
# We, thus, have two different invocation methods.
test_all() {
    index_rdy
    no_index
}

index_rdy() {
    # Samples MUST be generated by neo4j !!!
    python test.py \
    -e JAVA_OPTIONS='-Xms1G -Xmn128M -Xmx120G -XX:+UseG1GC' \
    -r "$REPETITIONS" \
    -s "$SETTINGS"  \
    $EXTRA \
    -i dbtrento/gremlin-neo4j \
    -i dbtrento/gremlin-neo4j-tp3

    python test.py \
    -e JAVA_OPTIONS='-Xms1G -Xmn128M -Xmx120G -XX:+UseG1GC' \
    -r "$REPETITIONS" \
    -s "$SETTINGS"  \
    $EXTRA \
    -i dbtrento/gremlin-arangodb

    python test.py \
    -e JAVA_OPTIONS='-Xms1G -Xmn128M -Xmx120G -XX:+UseG1GC' \
    -r "$REPETITIONS" \
    -s "$SETTINGS"  \
    $EXTRA \
    -i dbtrento/gremlin-pg

    # This system requires a license in runtime/confs/sparksee.cfg
    python test.py \
    -e JAVA_OPTIONS='-Xms1G -Xmn128M -Xmx120G -XX:+UseG1GC' \
    -r "$REPETITIONS" \
    -s "$SETTINGS"  \
    $EXTRA \
    -i dbtrento/gremlin-sparksee

    # From the "Performance-Tuning" documentation page:
    # https://orientdb.com/docs/2.1.x/Performance-Tuning.html
    # "... it's usually better assigning small heap and large disk cache buffer"
    python test.py \
    -e JAVA_OPTIONS='-Xms4g -Xmx20g -XX:+UseG1GC -Dstorage.diskCache.bufferSize=102400' \
    -r "$REPETITIONS" \
    $EXTRA \
    -s "$SETTINGS"  \
    -i dbtrento/gremlin-orientdb

    # Titans require additional options for cassandra and friends.
    python test.py \
    -e TITAN_JAVA_OPTS='-Xms4G -Xmx120G -XX:+UseG1GC -Dcassandra.jmx.local.port=9999 -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.authenticate=false' \
    -r "$REPETITIONS" \
    $EXTRA \
    -s "$SETTINGS"  \
    -i dbtrento/gremlin-titan \
    -i dbtrento/gremlin-titan-tp3
}

no_index() {
    python test.py \
    -e JAVA_OPTIONS='-Xms1G -Xmn128M -Xmx120G -XX:MaxDirectMemorySize=60000m -XX:+UseG1GC' \
    -r "$REPETITIONS" \
    $EXTRA \
    -s "$SETTINGS"  \
    -i dbtrento/gremlin-blazegraph
}

# ------------------------------------------------------------------------------
# Default variables

SETTINGS=settings/full.json
REPETITIONS=2
EXTRA=''

# ------------------------------------------------------------------------------
# --- Micro-benchmark queries
echo "*** Micro-benchmark queries ***"
test_all
make collect

# ------------------------------------------------------------------------------
# --- Macro-benchmark - LDBC (requires special index)
echo "*** Macro-benchmark - LDBC ***"
SETTINGS=settings/ldbc_cindex.json
EXTRA='-c _ldbc' REPETITIONS=1 index_rdy

SETTINGS=settings/ldbc.json
EXTRA='-x _ldbc' index_rdy
make collect

# ------------------------------------------------------------------------------
# --- Indexed micro-benchmark queries
echo "*** Indexed micro-benchmark queries ***"
SETTINGS=settings/cindex.json
EXTRA='-c _indexed' REPETITIONS=1 index_rdy

SETTINGS=settings/indexed.json
EXTRA='-x _indexed' index_rdy

make collect
exp_id=$(find collected/RESULTS/ -type f |\
   awk -F'_' '{print $1}' |\
   sort -n -r |\
   head -n1 |\
   xargs basename)
echo "$exp_id" >> notebooks/indexed.csv
